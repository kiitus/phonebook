{"version":3,"sources":["services/numbers.js","index.js"],"names":["url","axios","get","then","response","data","newNumber","post","id","delete","put","Notification","message","className","ShowNumber","props","item","name","number","onClick","deleteNumber","AllNumber","persons","map","person","key","App","useState","setPersons","newName","setNewName","setNewNumber","filterText","setFilterText","filteredList","setFilteredList","errorMessage","setErrorMessage","useEffect","numberService","value","onChange","event","target","console","log","length","filteret","filter","i","toLowerCase","charAt","onSubmit","preventDefault","index","findIndex","uusi","concat","p","window","confirm","catch","error","setTimeout","per","type","poistettu","deleted","deleted2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f65db56d.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\n//const url = \"http://localhost:3001/api/persons\"\r\nconst url = \"https://phonebookback.herokuapp.com/api/persons\"\r\n\r\nconst getAll = ()=>\r\n{\r\n    let request = axios.get(url)\r\n    return request.then((response)=>\r\n    {\r\n      return  response.data\r\n    }\r\n    \r\n    )\r\n}\r\nconst create= (newNumber)=>\r\n{\r\n    let request = axios.post(url,newNumber)\r\n    return request.then((response)=>\r\n    {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst deleteNumber=(id)=>\r\n{\r\n    return axios.delete(`${url}/${id}`)\r\n    \r\n}\r\nconst update = (id,newNumber) =>\r\n{\r\n    let request = axios.put(`${url}/${id}`,newNumber)\r\n    return request.then((response)=>\r\n    {\r\n        return response.data\r\n    })\r\n}\r\n\r\nexport default { \r\n    getAll: getAll, \r\n    create: create,\r\n    deleteNumber: deleteNumber,\r\n    update: update \r\n  }","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport numberService from './services/numbers'\nimport './index.css'\n\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\n\n\nconst ShowNumber= (props)=>\n{\n  return(\n  <div>{props.item.name} {props.item.number} <button onClick={()=>props.deleteNumber(props.item.id)}>Delete</button></div>\n  )\n}\n\nconst AllNumber= (props)=>\n  {\n    return(\n      <div>\n    {props.persons.map((person)=>\n      {\n        return <ShowNumber key={person.id} item={person} deleteNumber={props.deleteNumber}/>\n      })\n    }\n    </div>)\n  }\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [ filterText, setFilterText] = useState('')\n  const [filteredList,setFilteredList] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n\n    numberService.getAll()\n      .then(data => {\n        setPersons(data)\n        setFilteredList(data)\n      })\n  }, [])\n\n\n\n const changeText = (event)=>\n {\n  console.log(event.target.value)\n  setNewName(event.target.value)\n }\n const changeNumber=(event)=>\n {\n  console.log(event.target.value)\n   setNewNumber(event.target.value)\n }\n const addPerson= (event)=>\n{\n  \n  event.preventDefault()\n  let index = persons.findIndex(i=> i.name.toLowerCase() === newName.toLowerCase())\n\n   let uusi = {name:newName,number:newNumber}\n\n  if( index ===-1)\n  { \n    //  let uusi = {name:newName,number:newNumber,id:persons.length+1}\n   \n\n  numberService.create(uusi)\n  .then((data)=>\n  {\n    setPersons(persons.concat(data))\n    setFilteredList(filteredList.concat(data))\n  })\n    \n  }\n  else{\n    let p = persons[index]\n    if(!window.confirm(`Do we change ${p.name} number?`))\n    return\n\n   numberService.update(p.id,uusi).then((data)=>\n   {\n    setPersons(persons.map(person => person.id !== data.id ? person : data))\n    setFilteredList(filteredList.map(person => person.id !== data.id ? person : data))\n   }).catch((error)=>\n   {\n    setErrorMessage(\n      `Person '${uusi.name}' was already removed from server`\n    )\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n    setPersons(persons.filter((per) => per.id !== p.id))\n    setFilteredList(filteredList.filter((per) => per.id!==p.id))\n   })\n    \n  }\n  setNewName(\"\");\n  setNewNumber(\"\");\n \n}\nconst deleteNumber = (id)=>\n{\n  if(!window.confirm(\"Shall we delete?\"))\n   {\n     return;\n   }\n  console.log(\"Poistit \",id)\n  numberService.deleteNumber(id).then((poistettu)=>\n  {\n   let deleted= persons.filter((item)=>\n    {\n      return item.id !== id\n    })\n    setPersons(deleted)\n    \n    let deleted2= filteredList.filter((item)=>\n    {\n      return item.id !== id\n    })\n    setFilteredList(deleted2)\n\n  })\n\n \n\n}\nconst filter = (event)=>\n{\n  \n setFilterText(event.target.value)\n console.log(filterText)\n if(event.target.value.length===0)\n {\n   setFilteredList(persons)\n }\n else\n {\n  let filteret = persons.filter((item)=>\n  {\n    for(let i=0;i<event.target.value.length;i++)\n    {\n    if(item.name.toLowerCase().charAt(i) !== event.target.value.toLowerCase().charAt(i))\n    return false\n    }\n    return true;\n  })\n  console.log(filteret)\n  setFilteredList(filteret)\n}\n\n}\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      Filter names: <input value={filterText} onChange={filter} />\n      <h2>Add new number</h2>     \n       <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={changeText} />\n          number: <input value={newNumber} onChange={changeNumber}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <AllNumber persons={filteredList} deleteNumber={deleteNumber}/>    \n    </div>\n  )\n  }\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}